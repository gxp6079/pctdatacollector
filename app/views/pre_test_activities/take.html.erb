<div id="pre_test_id" data-pretestid="<%= @pre_test.id %>"></div>

<div id="information">
  <div class="field">

    <h1>Pre Test</h1>

    <% match_desc_lang = @pre_test.description.match(/<#{current_user.language}>(.+)<\/#{current_user.language}>/m)
    if match_desc_lang.nil?%>
      <% raise "Pre-test description language not understood for current user: #{current_user.language}" %>
    <% else %>
      <%= match_desc_lang[1].html_safe %><br><br>
    <% end %>

    <% match_html_test_lang = @pre_test.html_test.match(/<#{current_user.language}>(.+)<\/#{current_user.language}>/m)
    if match_html_test_lang.nil?%>
      <% raise "Pre-test description language not understood for current user: #{current_user.language}" %>
    <% else %>
      <%= match_html_test_lang[1].html_safe %>
    <% end %>

    <br>
    <div align="center">
      <% if current_user.language == 'en' %>
        <p><u>Note</u>: by submitting the answers to the pre-test you will start with the real experiment and you
        won't be able to re-take the training. If you want to re-take the training just navigate back using your
        browser or click 'home' link in the menu.</p>
      <% elsif current_user.language == 'es' %>
        <p><u>Nota</u>: al enviar las respuestas del pre-test usted comenzará con el experimento real y no será
        posible re-tomar el training. Si usted quire retomar el training navegue hacia atras o presione 'home' en el menú.</p>
      <% end %>
    </div>

    <p class="buttons">
      <%= link_to "Submit answer & Start the Experiment", '#',
                    class: "start-experiment-button",
                    onclick: "parseAndSendAnswer(); return false" %>
    </p>

  </div>
</div>

<script>

function parseAndSendAnswer() {
  var answer = [];
  var pre_test_id = $("#pre_test_id").data("pretestid");
  var row = $("#answermaxrow").data("answermaxrow");
  var col = $("#answermaxcol").data("answermaxcol");
  var row_answer;

  for (i = 1; i <= row; i++) {
    row_answer = [];
    for (j = 1; j <= col; j++) {
      row_answer.push(returnValue($('#a' + i + '_' + j)));
     }
     answer.push(row_answer);
  }

  if(have_unanswered_questions(answer)) {
    alert("You have some unanswered questions. Please, choose among 'true', 'false', or 'don't know' options.");
  } else {
    if (confirm('Please, confirm your answer submission.')) {
      $.post('/pre_test_activities/finish', { answer: JSON.stringify(answer), pre_test_id: pre_test_id } )
    }
  }
}

function returnValue(element) {
  // element can be a checkbox or an input
  var retval;
  if(element.is(':checkbox')) {
    retval = element.is(":checked");
  } else if (element.is(':input')) {
    retval = element.val();
  }
  return retval;
}

function have_unanswered_questions(answer) {
  var retval = false;
  for(var i = 0; i < answer.length; i++) {
    if(answer[i][0] == "unanswered") {
      retval = true;
      break;
    }
  }
  return retval;
}

</script>

